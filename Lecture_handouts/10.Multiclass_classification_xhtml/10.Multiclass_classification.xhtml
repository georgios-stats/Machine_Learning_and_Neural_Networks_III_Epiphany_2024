<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.3.7" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>LyX Document</title>
<style type='text/css'>
/* LyX Provided Styles */
mstyle.math { font-style: italic; }

/* Layout-provided Styles */
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
h3.subsection_ {
font-weight: bold;
font-size: medium;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
ol.enumerate {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
h2.section {
font-weight: normal;
font-style: normal;
font-variant: small-caps;
font-size: medium;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.theorem {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.theorem_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.note {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.note_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.example {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.example_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
h3.subsection {
font-weight: bold;
font-size: medium;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
span.subsection_label {
font-weight: normal;
font-size: medium;

}
dl.description dt { font-weight: bold; }
div.solution_ {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.solution__label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.problem {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.problem_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.Shadowbox { border: solid gray medium; border-bottom: solid black 1ex; border-right: solid black 1ex; padding: 0.5ex; }
div.float {
	border: 2px solid black;
	text-align: center;
}
div.float-caption {
	text-align: center;
	border: 2px solid black;
	padding: 1ex;
	margin: 1ex;
}


</style>
</head>
<body dir="auto">


<div class="standard" id='magicparlabel-1'><div class='Shadowbox'><div class="plain_layout" id='magicparlabel-15'>Machine Learning and Neural Networks (MATH3431)&nbsp;&nbsp;Epiphany term, 2024<div style='height:3ex'></div></div>

<div class="plain_layout" style='text-align: center;' id='magicparlabel-16'> Handout <a href="#enu_Handout___Multi_class">enu:Handout-:-Multi-class</a>: Multi-class classification   <div style='height:3ex'></div></div>

<div class="plain_layout" id='magicparlabel-25'>Lecturer &amp; author: Georgios P. Karagiannis <a href="georgios.karagiannis@durham.ac.uk">georgios.karagiannis@durham.ac.uk</a></div>

<div class="plain_layout" id='magicparlabel-26'><hr />

<div style='height:3ex'></div></div>
<h3 class="subsection_" id='magicparlabel-27'>Aim</h3>
<div class="plain_layout" id='magicparlabel-28'>To introduce the Support Vector Machines as a procedure. Motivation, set-up, description, computation, and implementation. We focus on the classical treatment.</div>

<div class="plain_layout" id='magicparlabel-29'><hr />

<div style='height:3ex'></div></div>
<h3 class="subsection_" id='magicparlabel-30'>Reading list &amp; references:</h3>

<ol class="enumerate" id='magicparlabel-31'><li class="enumerate_item"><a id="enu_Shalev_Shwartz__S____" />
 Shalev-Shwartz, S., &amp; Ben-David, S. (2014). Understanding machine learning: From theory to algorithms. Cambridge university press. 

<ul class="itemize" id='magicparlabel-32'><li class="itemize_item">Ch. 17 (pp. 190-198) </li>
</ul>
</li><li class="enumerate_item">Bishop, C. M. (2006). Pattern recognition and machine learning (Vol. 4, No. 4, p. 738). New York: Springer.

<ul class="itemize" id='magicparlabel-34'><li class="itemize_item">Ch. 7.1 Sparse Kernel Machines/Maximum marginal classifiers </li>
</ul>
</li><li class="enumerate_item">Vapnik, V. (2013). The nature of statistical learning theory. Springer science &amp; business media.</li>
<li class="enumerate_item"><a id="enu_Boyd__S__P__" />
 Boyd, S. P., &amp; Vandenberghe, L. (2004). Convex optimization. Cambridge university press.</li>
<li class="enumerate_item"><a id="enu_Strang__G___2019__" />
 Strang, G. (2019). Linear algebra and learning from data. Wellesley-Cambridge Press.</li>
</ol>
</div></div>
<h2 class="section" id='magicparlabel-38'><span class="section_label">1</span> Intro and motivation</h2>

<div class="note" id='magicparlabel-39'><div class="note_item"><span class="note_label">Note 1.</span>
Multi-class classification is the machine learning problem of classifying instances into one of several possible target classes. </div>
</div>

<div class="standard" id='magicparlabel-40'><br />

</div>

<div class="example" id='magicparlabel-41'><div class="example_item"><span class="example_label">Example 2.</span>
Applications include: (i.) categorizing documents according to topic (input features is the set of documents and target is the set of possible topics); (ii.) determining which object appears in a given image (input is the set of images and target is the set of possible objects); etc...</div>
</div>

<div class="standard" id='magicparlabel-42'><br />

</div>

<div class="note" id='magicparlabel-43'><div class="note_item"><span class="note_label">Note 3.</span>
We wish to classify objects with given features <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle>
  </mrow>
 </mrow></math> into one of the <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>k</mi><mo> &isin; </mo>
   <mstyle mathvariant='double-struck'><mi>N</mi>
   </mstyle><mo>-</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
<mn>0</mn>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> categories <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <mrow>
   <msub>
    <mrow>
     <mstyle mathvariant='script'><mi>C</mi>
     </mstyle>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo>,</mo><mn>...</mn><mo>,</mo>
   <msub>
    <mrow>
     <mstyle mathvariant='script'><mi>C</mi>
     </mstyle>
    </mrow>
    <mrow><mi>k</mi>
    </mrow>
   </msub>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math>. </div>
</div>

<div class="standard" id='magicparlabel-44'><br />

</div>

<div class="note" id='magicparlabel-45'><div class="note_item"><span class="note_label">Note 4.</span>
To achieve that we aim to learn a predictive rule <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='script'><mi>Y</mi>
   </mstyle>
  </mrow>
 </mrow></math> from a hypothesis class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>H</mi>
  </mstyle>
 </mrow></math> i.e. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle>
  </mrow>
 </mrow></math>. Here, to easy the notation we define a set of targets <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>Y</mi>
   </mstyle><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>k</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> implying that the multi-class categorization involves <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>k</mi><mo> &isin; </mo>
   <mstyle mathvariant='double-struck'><mi>N</mi>
   </mstyle><mo>-</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
<mn>0</mn>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> possible target classes . If the object <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>z</mi><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> belongs to class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow>
    <mstyle mathvariant='script'><mi>C</mi>
    </mstyle>
   </mrow>
   <mrow><mi>j</mi>
   </mrow>
  </msub>
 </mrow></math> i.e. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>z</mi><mo> &isin; </mo>
   <msub>
    <mrow>
     <mstyle mathvariant='script'><mi>C</mi>
     </mstyle>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub>
  </mrow>
 </mrow></math> then <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>y</mi><mo>=</mo><mi>j</mi>
  </mrow>
 </mrow></math>. </div>
</div>

<div class="standard" id='magicparlabel-46'><br />

</div>

<div class="note" id='magicparlabel-47'><div class="note_item"><span class="note_label">Note 5.</span>
There is available a training data-set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='normal'>
    <mstyle class='math'>
     <mrow>
      <mstyle mathvariant='script'><mi>S</mi>
      </mstyle><mo>=</mo>
     </mrow>
    </mstyle>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>,</mo>
     <msub>
      <mrow><mi>y</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>;</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>n</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>n</mi>
 </mrow></math> examples where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>Y</mi>
   </mstyle>
  </mrow>
 </mrow></math> independently generated from a data-generating process <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>g</mi>
 </mrow></math>; i.e. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>S</mi>
   </mstyle><mo> &sim; </mo><mi>g</mi>
  </mrow>
 </mrow></math>. </div>
</div>
<h2 class="section" id='magicparlabel-48'><span class="section_label">2</span> Reduction to the binary classification approaches</h2>

<div class="note" id='magicparlabel-49'><div class="note_item"><span class="note_label">Note 6.</span>
The multi-class categorization problem can be addressed by a reduction to the binary classification. –We discuss two simple ways. </div>
</div>

<div class="standard" id='magicparlabel-50'><br />

</div>

<div class="note" id='magicparlabel-51'><div class="note_item"><span class="note_label">Note 7.</span>
Assume that there is available a binary classification learning algorithm <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow>
    <mstyle mathvariant='fraktur'><mi>A</mi>
    </mstyle>
   </mrow>
   <mrow>
    <mstyle mathvariant='normal'>
     <mrow><mi>b</mi><mi>i</mi><mi>n</mi><mi>a</mi><mi>r</mi><mi>y</mi>
     </mrow>
    </mstyle>
   </mrow>
  </msub>
 </mrow></math>, such as the soft-SVM or the Bernoulli regression.</div>
</div>
<h3 class="subsection" id='magicparlabel-52'><span class="subsection_label">2.1</span> One-versus-all approach </h3>

<div class="note" id='magicparlabel-53'><div class="note_item"><span class="note_label">Note 8.</span>
The one-versus-all approach involves training <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>k</mi><mo>&gt;</mo><mn>2</mn>
  </mrow>
 </mrow></math> binary classifiers, each of which discriminates between one class and the rest of the classes.</div>
</div>

<div class="standard" id='magicparlabel-54'><br />

</div>

<div class="note" id='magicparlabel-55'><div class="note_item"><span class="note_label">Note 9.</span>
<a id="note_For_every_class" />
 It works as follows</div>

<ol class="enumerate" id='magicparlabel-56'><li class="enumerate_item">For each class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>k</mi>
  </mrow>
 </mrow></math>, construct a binary training data-sets <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='normal'>
    <mstyle class='math'>
     <mrow>
      <msup>
       <mrow>
        <mstyle mathvariant='script'><mi>S</mi>
        </mstyle>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

       </mrow>
      </msup><mo>=</mo>
     </mrow>
    </mstyle>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mn>1</mn>
      </mrow>
     </msub><mo>,</mo>
     <msubsup>
      <mrow><mi>t</mi>
      </mrow>
      <mrow><mn>1</mn>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

      </mrow>
     </msubsup>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mn>...</mn><mo>,</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>n</mi>
      </mrow>
     </msub><mo>,</mo>
     <msubsup>
      <mrow><mi>t</mi>
      </mrow>
      <mrow><mi>n</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

      </mrow>
     </msubsup>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msubsup>
    <mrow><mi>t</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msubsup><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
   <mtable>
    <mtr>
     <mtd>
      <mrow><mo>-</mo><mn>1</mn>
      </mrow>
     </mtd>
     <mtd>
      <mrow>
       <msub>
        <mrow><mi>y</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub><mo> &ne; </mo><mi>j</mi>
      </mrow>
     </mtd>
    </mtr>
    <mtr>
     <mtd><mn>1</mn>
     </mtd>
     <mtd>
      <mrow>
       <msub>
        <mrow><mi>y</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub><mo>=</mo><mi>j</mi>
      </mrow>
     </mtd>
    </mtr>
   </mtable>
  </mrow>
 </mrow></math> from the original available training data-set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='normal'>
    <mstyle class='math'>
     <mrow>
      <mstyle mathvariant='script'><mi>S</mi>
      </mstyle><mo>=</mo>
     </mrow>
    </mstyle>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>,</mo>
     <msub>
      <mrow><mi>y</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>;</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>n</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math>. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow>
    <mstyle mathvariant='script'><mi>S</mi>
    </mstyle>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> is the set of examples labeled <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mn>1</mn>
 </mrow></math> if their label in <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle class='math'>
   <mstyle mathvariant='script'><mi>S</mi>
   </mstyle>
  </mstyle>
 </mrow></math> was <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>j</mi>
 </mrow></math>, and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo>−</mo><mn>1</mn>
  </mrow>
 </mrow></math> otherwise. </li>
<li class="enumerate_item"><a id="enu_For_each_binary" />
 For each binary training data-set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msup>
   <mrow>
    <mstyle mathvariant='script'><mi>S</mi>
    </mstyle>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math>, consider a binary predictor rule <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mo>-</mo><mn>1</mn><mo>,</mo><mo>+</mo><mn>1</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup><mo> &isin; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='script'><mi>H</mi>
     </mstyle>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup>
  </mrow>
 </mrow></math> and train it against <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow>
    <mstyle mathvariant='script'><mi>S</mi>
    </mstyle>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> such that <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup><mo>=</mo>
   <msub>
    <mrow>
     <mstyle mathvariant='fraktur'><mi>A</mi>
     </mstyle>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>b</mi><mi>i</mi><mi>n</mi><mi>a</mi><mi>r</mi><mi>y</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msup>
    <mrow>
     <mstyle mathvariant='script'><mi>S</mi>
     </mstyle>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math></li>
<li class="enumerate_item">Given <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msup>
   <mrow><mi>h</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math>, the one-versus-all multiclass hypothesis is defined as <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>h</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>o</mi><mi>v</mi><mi>a</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &isin; </mo><munder accent='false'>
   <mrow><mo> arg </mo><mo> max </mo>
   </mrow>
   <mrow><mi>j</mi><mo> &isin; </mo>
    <mstyle mathvariant='script'><mi>Y</mi>
    </mstyle>
   </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow>
    <msup>
     <mrow><mi>h</mi>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

     </mrow>
    </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math></li>
</ol>
</div>

<div class="standard" id='magicparlabel-63'><br />

</div>

<div class="note" id='magicparlabel-64'><div class="note_item"><span class="note_label">Note 10.</span>
In cases where there are ties, it is reasonable to decide the classification based on some reasonable weights. E.g. if algorithm <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow>
    <mstyle mathvariant='fraktur'><mi>A</mi>
    </mstyle>
   </mrow>
   <mrow>
    <mstyle mathvariant='normal'>
     <mrow><mi>b</mi><mi>i</mi><mi>n</mi><mi>a</mi><mi>r</mi><mi>y</mi>
     </mrow>
    </mstyle>
   </mrow>
  </msub>
 </mrow></math> is a SVM with hypothesis of the form <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mstyle mathvariant='normal'>
    <mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi>
    </mrow>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

   <mrow>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

     </mrow>
    </msup><mo>,</mo><mi>x</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, and I get <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mn>1</mn><mo>=</mo>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

     <mrow><mi>j</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

   <mrow>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

     </mrow>
    </msup><mo>,</mo><mi>x</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>
<mo>&gt;</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

   <mrow>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

      <mrow><mi>j</mi><mo>'</mo>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

     </mrow>
    </msup><mo>,</mo><mi>x</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

  </mrow>
 </mrow></math> then <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>y</mi><mo>=</mo><mi>j</mi>
  </mrow>
 </mrow></math>. </div>
</div>

<div class="standard" id='magicparlabel-65'><br />

</div>

<div class="note" id='magicparlabel-66'><div class="note_item"><span class="note_label">Note 11.</span>
In Note <a href="#note_For_every_class">9</a>(<a href="#enu_For_each_binary">2.</a>), we make the strong assumption that hoping that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>h</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>j</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> should equal <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mn>1</mn>
 </mrow></math> if and only if <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>x</mi>
 </mrow></math> belongs to class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>j</mi>
 </mrow></math>. However, this is not always true. Figure <a href="#fig_Two_discriminants_">2.1</a> shows a case involving three classes <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow>
    <mstyle mathvariant='script'><mi>C</mi>
    </mstyle>
   </mrow>
   <mrow><mo>?</mo>
   </mrow>
  </msub>
 </mrow></math> where this approach leads to regions <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow>
    <mstyle mathvariant='script'><mi>R</mi>
    </mstyle>
   </mrow>
   <mrow><mo>?</mo>
   </mrow>
  </msub>
 </mrow></math> of input space that are ambiguously classified. </div>
</div>

<div class='float-figure'><div class="plain_layout" id='magicparlabel-71'><img style='width:40%;' src='0_extra_tmp_mffk55_Dropbox_Teaching_material_on____Multiclass_classification_one-vs-all-issue.png' alt='image: 0_extra_tmp_mffk55_Dropbox_Teaching_material_on____Multiclass_classification_one-vs-all-issue.png' />
</div>

<div class="plain_layout" id='magicparlabel-72'><span class='float-caption-Standard float-caption float-caption-standard'>Figure 2.1:  <a id="fig_Two_discriminants_" />
 Two binary classification rules <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>h</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mn>1</mn>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>h</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mn>2</mn>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> designed to distinguish points in class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow>
    <mstyle mathvariant='script'><mi>C</mi>
    </mstyle>
   </mrow>
   <mrow><mi>j</mi>
   </mrow>
  </msub>
 </mrow></math> from points not in class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow>
    <mstyle mathvariant='script'><mi>C</mi>
    </mstyle>
   </mrow>
   <mrow><mi>j</mi>
   </mrow>
  </msub>
 </mrow></math> for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>j</mi><mo> &isin; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mn>1</mn><mo>,</mo><mn>2</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math>.</span></div>
</div>

<h3 class="subsection" id='magicparlabel-77'><span class="subsection_label">2.2</span> One-versus-one approach</h3>

<div class="note" id='magicparlabel-78'><div class="note_item"><span class="note_label">Note 12.</span>
The one-versus-one approach involves the introduction of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>k</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>k</mi><mo>-</mo><mn>1</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>/</mo><mn>2</mn>
  </mrow>
 </mrow></math> binary classification rules, one for every possible pair of classes, and their comparison to each other, in a manner that each point is classified according to a majority vote amongst these binary classification rules. </div>
</div>

<div class="standard" id='magicparlabel-79'><br />

</div>

<div class="note" id='magicparlabel-80'><div class="note_item"><span class="note_label">Note 13.</span>
<a id="note_It_works_as" />
 It works as follows</div>

<ol class="enumerate" id='magicparlabel-81'><li class="enumerate_item">For each pair of classes <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mn>1</mn><mo> &le; </mo><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo> &le; </mo><mi>k</mi>
  </mrow>
 </mrow></math>, construct binary training data-sets <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow>
    <mstyle mathvariant='script'><mi>S</mi>
    </mstyle>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

    <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> containing all examples from <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>S</mi>
  </mstyle>
 </mrow></math> whose label is either <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>i</mi>
 </mrow></math> or <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>j</mi>
 </mrow></math>.

<dl class='description' id='magicparlabel-82'><dt class="description_label">I.e.</dt>
<dd class="description_item"> For each binary training data-set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow>
    <mstyle mathvariant='script'><mi>S</mi>
    </mstyle>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

    <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> set the binary label as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mn>1</mn>
 </mrow></math> if the class is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>i</mi>
 </mrow></math> and as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo>-</mo><mn>1</mn>
  </mrow>
 </mrow></math> if the class is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>j</mi>
 </mrow></math>; i.e. Starting with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow>
     <mstyle mathvariant='script'><mi>S</mi>
     </mstyle>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

     <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup><mo>=</mo><mi> &empty; </mi>
  </mrow>
 </mrow></math> for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>t</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>m</mi>
  </mrow>
 </mrow></math> 

<ul class="itemize" id='magicparlabel-83'><li class="itemize_item">if <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>=</mo><mi>i</mi>
  </mrow>
 </mrow></math> add <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>,</mo><mn>1</mn>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> to <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow>
    <mstyle mathvariant='script'><mi>S</mi>
    </mstyle>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

    <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> </li>
<li class="itemize_item">if <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>=</mo><mi>j</mi>
  </mrow>
 </mrow></math> add <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>,</mo><mo>-</mo><mn>1</mn>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> to <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow>
    <mstyle mathvariant='script'><mi>S</mi>
    </mstyle>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

    <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> </li>
</ul>
</dd></dl>
</li><li class="enumerate_item">For each pair <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mn>1</mn><mo> &le; </mo><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo> &le; </mo><mi>k</mi>
  </mrow>
 </mrow></math>, train a binary classification algorithm against <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow>
    <mstyle mathvariant='script'><mi>S</mi>
    </mstyle>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

    <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
 </mrow></math> to get <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

     <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup><mo>=</mo>
   <msub>
    <mrow>
     <mstyle mathvariant='fraktur'><mi>A</mi>
     </mstyle>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>b</mi><mi>i</mi><mi>n</mi><mi>a</mi><mi>r</mi><mi>y</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msup>
    <mrow>
     <mstyle mathvariant='script'><mi>S</mi>
     </mstyle>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

     <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math></li>
<li class="enumerate_item">Given <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msup>
   <mrow><mi>h</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

    <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

   </mrow>
  </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math>, the one-versus-one multiclass hypothesis is defined as the one with the highest number of &ldquo;wins&rdquo;; i.e. <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>h</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>o</mi><mi>v</mi><mi>o</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &isin; </mo><munder accent='false'>
   <mrow><mo> arg </mo><mo> max </mo>
   </mrow>
   <mrow><mi>i</mi><mo> &isin; </mo>
    <mstyle mathvariant='script'><mi>Y</mi>
    </mstyle>
   </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow>
    <msub>
     <mrow><mo> &sum; </mo>
     </mrow>
     <mrow>
      <mrow><mi>j</mi><mo> &isin; </mo>
       <mstyle mathvariant='script'><mi>Y</mi>
       </mstyle>
      </mrow>
     </mrow>
    </msub>
    <mstyle mathvariant='normal'>
     <mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi>
     </mrow>
    </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>j</mi><mo>-</mo>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    <msup>
     <mrow><mi>h</mi>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

      <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

     </mrow>
    </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math></li>
</ol>
</div>

<div class="standard" id='magicparlabel-87'><br />

</div>

<div class="note" id='magicparlabel-88'><div class="note_item"><span class="note_label">Note 14.</span>
The one-versus-one approach suffers from the problem of ambiguous regions as seen in Figure <a href="#fig_Two_discriminants__1">2.2</a>. </div>
</div>

<div class='float-figure'><div class="plain_layout" id='magicparlabel-93'><img style='width:40%;' src='1_extra_tmp_mffk55_Dropbox_Teaching_material_on____Multiclass_classification_one-vs-one-issue.png' alt='image: 1_extra_tmp_mffk55_Dropbox_Teaching_material_on____Multiclass_classification_one-vs-one-issue.png' />
</div>

<div class="plain_layout" id='magicparlabel-94'><span class='float-caption-Standard float-caption float-caption-standard'>Figure 2.2:  <a id="fig_Two_discriminants__1" />
 three binary classification rules each of which is used to separate a pair of classes <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow>
    <mstyle mathvariant='script'><mi>C</mi>
    </mstyle>
   </mrow>
   <mrow><mi>k</mi>
   </mrow>
  </msub>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow>
    <mstyle mathvariant='script'><mi>C</mi>
    </mstyle>
   </mrow>
   <mrow><mi>j</mi>
   </mrow>
  </msub>
 </mrow></math>.</span></div>
</div>



<div class="standard" id='magicparlabel-99'><br />

</div>
<h2 class="section" id='magicparlabel-100'><span class="section_label">3</span> Linear multi-class predictors </h2>
<h3 class="subsection" id='magicparlabel-101'><span class="subsection_label">3.1</span> Setting up the predictive rule and class of hypotheses </h3>

<div class="note" id='magicparlabel-102'><div class="note_item"><span class="note_label">Note 15.</span>
We try to generalize the linear predictor for binary classifications taking the form <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msub>
      <mrow><mi>h</mi>
      </mrow>
      <mrow>
       <mstyle mathvariant='normal'>
        <mrow><mi>b</mi><mi>i</mi><mi>n</mi>
        </mrow>
       </mstyle>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>
    <mrow><mo>=</mo>
     <mstyle mathvariant='normal'>
      <mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi>
      </mrow>
     </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

     <mrow><mi>w</mi><mo>,</mo><mi>x</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo><munder accent='false'>
     <mrow><mo> arg </mo><mo> max </mo>
     </mrow>
     <mrow><mi>y</mi><mo> &isin; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

      <mrow><mo>-</mo><mn>1</mn><mo>,</mo><mo>+</mo><mn>1</mn>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

     </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

     <mrow><mi>w</mi><mo>,</mo><mi>y</mi><mi>x</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

    </mrow>
   </mtd>
  </mtr>
 </mtable></math> into linear predictor for multi-class classifications. </div>
</div>

<div class="standard" id='magicparlabel-103'><br />

</div>

<div class="note" id='magicparlabel-104'><div class="note_item"><span class="note_label">Note 16.</span>
In the multi-class setting, we extend the binary SVM idea as follows. </div>

<ul class="itemize" id='magicparlabel-105'><li class="itemize_item">Define a multi-class predictor rule <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='script'><mi>Y</mi>
   </mstyle>
  </mrow>
 </mrow></math> with formula <a id="eq__2" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msub>
      <mrow><mi>h</mi>
      </mrow>
      <mrow><mi>w</mi>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><munder accent='false'>
     <mrow><mo> arg </mo>
     </mrow>
     <mrow><mi>y</mi><mo> &isin; </mo>
      <mstyle mathvariant='script'><mi>Y</mi>
      </mstyle>
     </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

     <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

    </mrow>
   </mtd>
   <mtd>(3.1)
   </mtd>
  </mtr>
 </mtable></math> for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>W</mi>
   </mstyle><mo> &sub; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math>.</li>
<li class="itemize_item">In <a href="#eq__2">(3.1)</a>, we need to specify a class-sensitive feature mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &Psi; </mo><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>Y</mi>
   </mstyle><mo> &rarr; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> whose function's <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> role is to act as a score function that assesses how well the label <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>y</mi>
 </mrow></math> fits the instance <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>x</mi>
 </mrow></math>. </li>
<li class="itemize_item">The hypothesis class of multi-class predictors is 
<div style = "text-align: center;"><img src="lyxpreviewIeTgGM1.png" alt="Mathematical Equation" />
</div>
</li>
</ul>
</div>

<div class="standard" id='magicparlabel-108'><br />

</div>

<div class="note" id='magicparlabel-109'><div class="note_item"><span class="note_label">Note 17.</span>
The equation of class-sensitive feature mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo> &Psi; </mo>
 </mrow></math> depends on the application.</div>
</div>

<div class="standard" id='magicparlabel-110'><br />

</div>

<div class="example" id='magicparlabel-111'><div class="example_item"><span class="example_label">Example 18.</span>
An example of class-sensitive feature mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo> &Psi; </mo>
 </mrow></math> such that <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><munder accent='false'>
      <mrow>
       <munder>
        <mrow>
         <mrow><mn>0</mn><mo>,</mo>
          <mi>&hellip;
          </mi><mn>0</mn>
         </mrow>
        </mrow><mo stretchy="true">&UnderBrace;</mo>
       </munder><mo>,</mo>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>y</mi><mo>-</mo><mn>1</mn>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi>n</mi><mspace width="6px" />
       <mstyle mathvariant='normal'>
        <mrow><mi>e</mi><mi>l</mi><mi>e</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi>
        </mrow>
       </mstyle>
      </mrow></munder><mover accent='false'>
      <mover>
       <mrow>
        <mrow>
         <msub>
          <mrow><mi>x</mi>
          </mrow>
          <mrow><mn>1</mn>
          </mrow>
         </msub><mo>,</mo>
         <mi>&hellip;
         </mi>
         <msub>
          <mrow><mi>x</mi>
          </mrow>
          <mrow><mi>n</mi>
          </mrow>
         </msub>
        </mrow>
       </mrow><mo stretchy="true">&OverBrace;</mo>
      </mover>
      <mrow><mi>n</mi><mspace width="6px" />
       <mstyle mathvariant='normal'>
        <mrow><mi>e</mi><mi>l</mi><mi>e</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi>
        </mrow>
       </mstyle>
      </mrow></mover><mo>,</mo><munder accent='false'>
      <mrow>
       <munder>
        <mrow>
         <mrow><mn>0</mn><mo>,</mo>
          <mi>&hellip;
          </mi><mn>0</mn>
         </mrow>
        </mrow><mo stretchy="true">&UnderBrace;</mo>
       </munder><mo>,</mo>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>k</mi><mo>-</mo><mi>y</mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi>n</mi><mspace width="6px" />
       <mstyle mathvariant='normal'>
        <mrow><mi>e</mi><mi>l</mi><mi>e</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi>
        </mrow>
       </mstyle>
      </mrow></munder>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &isin; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow>
     <mrow><mi>n</mi><mi>k</mi>
     </mrow>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>W</mi>
   </mstyle><mo> &sub; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow>
     <mrow><mi>n</mi><mi>k</mi>
     </mrow>
    </mrow>
   </msup>
  </mrow>
 </mrow></math>. In that way, the predictive rule simplifies to <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msub>
      <mrow><mi>h</mi>
      </mrow>
      <mrow><mi>w</mi>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>
    <mrow><mo>=</mo><munder accent='false'>
     <mrow><mo> arg </mo><mo> max </mo>
     </mrow>
     <mrow><mi>y</mi><mo> &isin; </mo>
      <mstyle mathvariant='script'><mi>Y</mi>
      </mstyle>
     </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

     <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo><munder accent='false'>
     <mrow><mo> arg </mo><mo> max </mo>
     </mrow>
     <mrow><mi>y</mi><mo> &isin; </mo>
      <mstyle mathvariant='script'><mi>Y</mi>
      </mstyle>
     </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

     <mrow>
      <msub>
       <mrow><mi>w</mi>
       </mrow>
       <mrow><mi>y</mi>
       </mrow>
      </msub><mo>,</mo><mi>x</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

    </mrow>
   </mtd>
  </mtr>
 </mtable></math>where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>w</mi>
       </mrow>
       <mrow><mn>1</mn>
       </mrow>
      </msub><mo>,</mo><mn>...</mn><mo>,</mo>
      <msub>
       <mrow><mi>w</mi>
       </mrow>
       <mrow><mi>k</mi>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> and each <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mi>j</mi>
   </mrow>
  </msub>
 </mrow></math> has <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>n</mi>
 </mrow></math> elements. </div>
</div>
<h3 class="subsection" id='magicparlabel-112'><span class="subsection_label">3.2</span> About the learning problem </h3>

<div class="note" id='magicparlabel-113'><div class="note_item"><span class="note_label">Note 19.</span>
(<math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
  </mrow>
 </mrow></math> loss function) The 0-1 loss function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi> &ell; </mi>
   </mrow>
   <mrow>
    <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
    </mrow>
   </mrow>
  </msub>
 </mrow></math> in the multi-class framework can be specified as <a id="eq__1_1" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msub>
      <mrow><mi> &ell; </mi>
      </mrow>
      <mrow>
       <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>h</mi>
       </mrow>
       <mrow><mi>w</mi>
       </mrow>
      </msub><mo>,</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
     <msub>
      <mrow>
       <mstyle mathvariant='normal'><mn>1</mn>
       </mstyle>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
<mi>y</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>h</mi>
       </mrow>
       <mrow><mi>w</mi>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
     <mtable>
      <mtr>
       <mtd>
        <mrow><mn>1</mn><mo>,</mo>
        </mrow>
       </mtd>
       <mtd>
        <mrow>
         <msub>
          <mrow><mi>h</mi>
          </mrow>
          <mrow><mi>w</mi>
          </mrow>
         </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>y</mi>
        </mrow>
       </mtd>
      </mtr>
      <mtr>
       <mtd>
        <mrow><mn>0</mn><mo>,</mo>
        </mrow>
       </mtd>
       <mtd>
        <mrow>
         <msub>
          <mrow><mi>h</mi>
          </mrow>
          <mrow><mi>w</mi>
          </mrow>
         </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ne; </mo><mi>y</mi>
        </mrow>
       </mtd>
      </mtr>
     </mtable>
    </mrow>
   </mtd>
   <mtd>(3.2)
   </mtd>
  </mtr>
 </mtable></math>as a straightforward extension of the one in binary classification. </div>
</div>

<div class="standard" id='magicparlabel-114'><br />

</div>

<div class="note" id='magicparlabel-115'><div class="note_item"><span class="note_label">Note 20.</span>
<math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
  </mrow>
 </mrow></math> loss <a href="#eq__1_1">(3.2)</a> is non-convex as the one in the binary classification problem. </div>
</div>

<div class="standard" id='magicparlabel-116'><br />

</div>

<div class="note" id='magicparlabel-117'><div class="note_item"><span class="note_label">Note 21.</span>
(Hinge loss function) The hinge loss function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi> &ell; </mi>
   </mrow>
   <mrow>
    <mstyle mathvariant='normal'>
     <mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>e</mi>
     </mrow>
    </mstyle>
   </mrow>
  </msub>
 </mrow></math> in the multi-class framework can be specified as <a id="eq__1" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msub>
      <mrow><mi> &ell; </mi>
      </mrow>
      <mrow>
       <mstyle mathvariant='normal'>
        <mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>e</mi>
        </mrow>
       </mstyle>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>h</mi>
       </mrow>
       <mrow><mi>w</mi>
       </mrow>
      </msub><mo>,</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
     <msub>
      <mrow><mo> max </mo>
      </mrow>
      <mrow>
       <mrow><mi> &xi; </mi><mo> &isin; </mo>
        <mstyle mathvariant='script'><mi>Y</mi>
        </mstyle>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi> &ell; </mi>
       </mrow>
       <mrow>
        <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
        </mrow>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi> &xi; </mi><mo>,</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

      <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>x</mi><mo>,</mo><mi> &xi; </mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(3.3)
   </mtd>
  </mtr>
 </mtable></math>extending on in binary classification. Example <a href="#exa_The_hinge_loss">24</a> provides a rational for its construction. </div>
</div>

<div class="standard" id='magicparlabel-118'><br />

</div>

<div class="example" id='magicparlabel-119'><div class="example_item"><span class="example_label">Example 22.</span>
<a id="note_The_hinge_loss" />
 The hinge loss function <a href="#eq__1">(3.3)</a> is convex w.r.t. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>w</mi>
 </mrow></math></div>

<div class="solution_" id='magicparlabel-120'><div class="solution__item"><span class="solution__label">Solution.</span>
Straightforward as it is the maximum over linear functions of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>w</mi>
 </mrow></math>. </div>
</div>
</div>

<div class="standard" id='magicparlabel-121'><br />

</div>

<div class="example" id='magicparlabel-122'><div class="example_item"><span class="example_label">Example 23.</span>
<a id="exa_The_hinge_loss_1" />
 The hinge loss function <a href="#eq__1">(3.3)</a> is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &rho; </mi><mo>-</mo>
  </mrow>
 </mrow></math>Lipschitz w.r.t. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>w</mi>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &rho; </mi><mo>=</mo>
   <msub>
    <mrow><mo> max </mo>
    </mrow>
    <mrow>
     <mrow><mi> &xi; </mi><mo> &isin; </mo>
      <mstyle mathvariant='script'><mi>Y</mi>
      </mstyle>
     </mrow>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>x</mi><mo>,</mo><mi> &xi; </mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. </div>

<div class="solution_" id='magicparlabel-123'><div class="solution__item"><span class="solution__label">Solution.</span>
See the Exercise <a href="#exer____2_1_1_1_1_1_3">exer:()-2-1-1-1-1-1-3</a> in the Exercise sheet. </div>
</div>
</div>

<div class="standard" id='magicparlabel-128'><br />

</div>

<div class="example" id='magicparlabel-129'><div class="example_item"><span class="example_label">Example 24.</span>
<a id="exa_The_hinge_loss" />
 The hinge loss function <a href="#eq__1">(3.3)</a> upper bounds the <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
  </mrow>
 </mrow></math> loss function <a href="#eq__1_1">(3.2)</a>.</div>

<div class="solution_" id='magicparlabel-130'><div class="solution__item"><span class="solution__label">Solution.</span>
It is <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

    <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

   </mtd>
   <mtd>
    <mrow><mo> &le; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

     <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo>
       <msub>
        <mrow><mi>h</mi>
        </mrow>
        <mrow><mi>w</mi>
        </mrow>
       </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>
<mspace width="40px" />
     <mstyle mathvariant='normal'>
      <mrow><mi>b</mi><mi>y</mi>&nbsp;<mi>c</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi>
      </mrow>
     </mstyle>
    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd>
    <mrow><mo> &#x27F9; </mo>
     <msub>
      <mrow><mi> &ell; </mi>
      </mrow>
      <mrow>
       <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>h</mi>
       </mrow>
       <mrow><mi>w</mi>
       </mrow>
      </msub><mo>,</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>
    <mrow><mo> &le; </mo>
     <msub>
      <mrow><mi> &ell; </mi>
      </mrow>
      <mrow>
       <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>h</mi>
       </mrow>
       <mrow><mi>w</mi>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

     <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo>
       <msub>
        <mrow><mi>h</mi>
        </mrow>
        <mrow><mi>w</mi>
        </mrow>
       </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo> &le; </mo>
     <msub>
      <mrow><mo> max </mo>
      </mrow>
      <mrow>
       <mrow><mi> &xi; </mi><mo> &isin; </mo>
        <mstyle mathvariant='script'><mi>Y</mi>
        </mstyle>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi> &ell; </mi>
       </mrow>
       <mrow>
        <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
        </mrow>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi> &xi; </mi><mo>,</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

      <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>x</mi><mo>,</mo><mi> &xi; </mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
 </mtable></math></div>
</div>
</div>

<div class="note" id='magicparlabel-131'><div class="note_item"><span class="note_label">Note 25.</span>
The hinge loss function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi> &ell; </mi>
   </mrow>
   <mrow>
    <mstyle mathvariant='normal'>
     <mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>e</mi>
     </mrow>
    </mstyle>
   </mrow>
  </msub>
 </mrow></math> can be used as a surrogate loss instead of the <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
  </mrow>
 </mrow></math> loss <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi> &ell; </mi>
   </mrow>
   <mrow>
    <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
    </mrow>
   </mrow>
  </msub>
 </mrow></math> to address the non-convex learning problem with convex learning problem tools. This results from Note <a href="#note_The_hinge_loss">22</a> and Example <a href="#exa_The_hinge_loss">24</a>. Hence the computation of error bounds and the derivation of assumptions guarantee PAC learning algorithm is straightforward. </div>
</div>

<div class="standard" id='magicparlabel-132'><br />

</div>

<div class="example" id='magicparlabel-133'><div class="example_item"><span class="example_label">Example 26.</span>
The hinge loss function <a href="#eq__1">(3.3)</a> reduces to the hinge loss <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &ell; </mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>e</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>h</mi>
     </mrow>
     <mrow><mi>w</mi>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> max </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mn>0</mn><mo>,</mo><mn>1</mn><mo>-</mo><mi>y</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

    <mrow><mi>w</mi><mo>,</mo><mi>x</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> in binary classification. </div>

<div class="solution_" id='magicparlabel-134'><div class="solution__item"><span class="solution__label">Solution.</span>
In the binary scenario, I have <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>Y</mi>
   </mstyle><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mo>-</mo><mn>1</mn><mo>,</mo><mo>+</mo><mn>1</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math>. If I set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </mfrac><mi>y</mi><mi>x</mi>
  </mrow>
 </mrow></math> then <a href="#eq__1">(3.3)</a> reduces to <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> max </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mn>0</mn><mo>,</mo><mn>1</mn><mo>-</mo><mi>y</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

    <mrow><mi>w</mi><mo>,</mo><mi>x</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. </div>
</div>
</div>



<div class="standard" id='magicparlabel-149'><br />

</div>

<div class="problem" id='magicparlabel-150'><div class="problem_item"><span class="problem_label">Problem 27.</span>
<a id="prob_The_Multi_class_SVM" />
 The Multi-class SVM learning problem <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <msub>
    <mrow>
     <mstyle mathvariant='script'><mi>H</mi>
     </mstyle>
    </mrow>
    <mrow>
     <mrow><mo> &Psi; </mo><mo>,</mo><mi>W</mi>
     </mrow>
    </mrow>
   </msub><mo>,</mo>
   <mstyle mathvariant='script'><mi>Z</mi>
   </mstyle><mo>,</mo>
   <msub>
    <mrow><mi> &ell; </mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>e</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msub>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> using Ridge regularization with shrinkage parameter <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &lambda; </mi><mo>&gt;</mo><mn>0</mn>
  </mrow>
 </mrow></math> is <a id="eq_" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup><mo>=</mo><munder accent='false'>
     <mrow><mo> arg </mo><mo> min </mo>
     </mrow><mi>w</mi></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><munder accent='false'>
      <munder>
       <mrow>
        <mrow>
         <mfrac>
          <mrow><mn>1</mn>
          </mrow>
          <mrow><mi>m</mi>
          </mrow>
         </mfrac>
         <msubsup>
          <mrow><mo> &sum; </mo>
          </mrow>
          <mrow>
           <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
           </mrow>
          </mrow>
          <mrow><mi>m</mi>
          </mrow>
         </msubsup>
         <msub>
          <mrow><mo> max </mo>
          </mrow>
          <mrow>
           <mrow><mi> &xi; </mi><mo> &isin; </mo>
            <mstyle mathvariant='script'><mi>Y</mi>
            </mstyle>
           </mrow>
          </mrow>
         </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

         <mrow>
          <msub>
           <mrow><mi> &ell; </mi>
           </mrow>
           <mrow>
            <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
            </mrow>
           </mrow>
          </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

          <mrow><mo>,</mo>
           <msub>
            <mrow><mi>z</mi>
            </mrow>
            <mrow><mi>i</mi>
            </mrow>
           </msub>
          </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

          <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

           <mrow>
            <msub>
             <mrow><mi>x</mi>
             </mrow>
             <mrow><mi>i</mi>
             </mrow>
            </msub><mo>,</mo><mi> &xi; </mi>
           </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

           <mrow>
            <msub>
             <mrow><mi>x</mi>
             </mrow>
             <mrow><mi>i</mi>
             </mrow>
            </msub><mo>,</mo>
            <msub>
             <mrow><mi>y</mi>
             </mrow>
             <mrow><mi>i</mi>
             </mrow>
            </msub>
           </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

          </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

         </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </mrow><mo stretchy="true">&UnderBrace;</mo>
      </munder>
      <mrow>
       <msub>
        <mrow>
         <mover>
          <mrow><mi>R</mi>
          </mrow><mo stretchy="true">&circ;</mo>
         </mover>
        </mrow>
        <mrow>
         <mstyle mathvariant='script'><mi>S</mi>
         </mstyle>
        </mrow>
       </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mspace />
       <mstyle mathvariant='normal'>
        <mrow><mi>a</mi><mi>s</mi>&nbsp;<mi>e</mi><mi>m</mi><mi>p</mi><mi>i</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>a</mi><mi>l</mi>&nbsp;<mi>r</mi><mi>i</mi><mi>s</mi><mi>k</mi>&nbsp;<mi>f</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi>
        </mrow>
       </mstyle>
      </mrow></munder><mo>+</mo><mi> &lambda; </mi>
      <msubsup>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

       </mrow>
       <mrow><mn>2</mn>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msubsup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(3.4)
   </mtd>
  </mtr>
 </mtable></math>with predictive rule <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>h</mi>
    </mrow>
    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><munder accent='false'>
   <mrow><mo> arg </mo><mo> max </mo>
   </mrow>
   <mrow><mi>y</mi><mo> &isin; </mo>
    <mstyle mathvariant='script'><mi>Y</mi>
    </mstyle>
   </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

   <mrow>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

  </mrow>
 </mrow></math> </div>
</div>
<h3 class="subsection" id='magicparlabel-151'><span class="subsection_label">3.3</span> About the learning algorithm</h3>

<div class="note" id='magicparlabel-152'><div class="note_item"><span class="note_label">Note 28.</span>
Problem <a href="#prob_The_Multi_class_SVM">27</a> can be solved with linear programming algorithms, as well as any variation of the SGD algorithm. –We discuss the latter. </div>
</div>

<div class="standard" id='magicparlabel-153'><br />

</div>

<div class="example" id='magicparlabel-154'><div class="example_item"><span class="example_label">Example 29.</span>
The recursion of SGD applied in <a href="#eq_">(3.4)</a> is<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>=</mo>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msup>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup><mo>,</mo>
     <msup>
      <mrow>
       <mover>
        <mrow><mi>y</mi>
        </mrow><mo stretchy="true">&circ;</mo>
       </mover>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msup>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup><mo>,</mo>
     <msup>
      <mrow><mi>y</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> with <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow>
     <mover>
      <mrow><mi>y</mi>
      </mrow><mo stretchy="true">&circ;</mo>
     </mover>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo> &isin; </mo>
   <msub>
    <mrow><mo> max </mo>
    </mrow>
    <mrow>
     <mrow><mi> &xi; </mi><mo> &isin; </mo>
      <mstyle mathvariant='script'><mi>Y</mi>
      </mstyle>
     </mrow>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi> &ell; </mi>
     </mrow>
     <mrow>
      <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
      </mrow>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi> &xi; </mi><mo>,</mo>
     <msup>
      <mrow><mi>z</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msup>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msup><mo>,</mo><mi> &xi; </mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msup>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msup><mo>,</mo>
      <msup>
       <mrow><mi>y</mi>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
  </mrow>
 </mrow></math> learning rate <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi> &eta; </mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
 </mrow></math> and for a randomly chosen example <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msup>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
    </msup><mo>,</mo>
    <msup>
     <mrow><mi>y</mi>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
    </msup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &sim; </mo><mi>g</mi>
  </mrow>
 </mrow></math>, at iteration <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>t</mi>
 </mrow></math>.</div>

<div class="solution_" id='magicparlabel-155'><div class="solution__item"><span class="solution__label">Solution.</span>
&nbsp;The recursion is <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>=</mo>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>-</mo>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mi>v</mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub>
  </mrow>
 </mrow></math> where <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>v</mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo> &isin; </mo>
   <msub>
    <mrow><mi> &part; </mi>
    </mrow>
    <mrow><mi>w</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mi> &ell; </mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>e</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>h</mi>
     </mrow>
     <mrow><mi>w</mi>
     </mrow>
    </msub><mo>,</mo><mi>z</mi><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>I will use Proposition <a href="#exa_Let__convex">exa:Let--convex</a> from Handout <a href="#enu_Handout__Elements_of">enu:Handout:-Elements-of</a>: Elements of convex learning problems. Because I can write <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &ell; </mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>e</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>h</mi>
     </mrow>
     <mrow><mi>w</mi>
     </mrow>
    </msub><mo>,</mo><mi>z</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mo> max </mo>
    </mrow>
    <mrow>
     <mrow><mi> &xi; </mi><mo> &isin; </mo>
      <mstyle mathvariant='script'><mi>Y</mi>
      </mstyle>
     </mrow>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mi>c</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>w</mi><mo>;</mo><mi> &xi; </mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> with <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>c</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>w</mi><mo>;</mo><mi> &xi; </mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi> &ell; </mi>
    </mrow>
    <mrow>
     <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
     </mrow>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo>,</mo>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

   <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>,</mo><mi> &xi; </mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>,</mo>
     <msub>
      <mrow><mi>y</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

  </mrow>
 </mrow></math>if <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mover>
   <mrow><mi>y</mi>
   </mrow><mo stretchy="true">&circ;</mo>
  </mover>
 </mrow></math> is such as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>c</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>w</mi><mo>;</mo>
    <mover>
     <mrow><mi>y</mi>
     </mrow><mo stretchy="true">&circ;</mo>
    </mover>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mo> max </mo>
    </mrow>
    <mrow>
     <mrow><mi> &xi; </mi><mo> &isin; </mo>
      <mstyle mathvariant='script'><mi>Y</mi>
      </mstyle>
     </mrow>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>c</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>w</mi><mo>;</mo><mi> &xi; </mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> then <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <msub>
     <mrow><mi>v</mi>
     </mrow>
     <mrow><mi>t</mi>
     </mrow>
    </msub>
   </mtd>
   <mtd>
    <mrow><mo> &isin; </mo>
     <msub>
      <mrow><mi> &part; </mi>
      </mrow>
      <mrow><mi>w</mi>
      </mrow>
     </msub>
     <msub>
      <mrow><mi> &ell; </mi>
      </mrow>
      <mrow>
       <mstyle mathvariant='normal'>
        <mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>e</mi>
        </mrow>
       </mstyle>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>h</mi>
       </mrow>
       <mrow><mi>w</mi>
       </mrow>
      </msub><mo>,</mo><mi>z</mi><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo>
     <msub>
      <mrow><mi> &part; </mi>
      </mrow>
      <mrow><mi>w</mi>
      </mrow>
     </msub><mi>c</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>w</mi><mo>;</mo>
      <mover>
       <mrow><mi>y</mi>
       </mrow><mo stretchy="true">&circ;</mo>
      </mover>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo>
     <msub>
      <mrow><mi> &part; </mi>
      </mrow>
      <mrow><mi>w</mi>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi> &ell; </mi>
       </mrow>
       <mrow>
        <mrow><mn>0</mn><mo>-</mo><mn>1</mn>
        </mrow>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mo>,</mo>
       <mover>
        <mrow><mi>y</mi>
        </mrow><mo stretchy="true">&circ;</mo>
       </mover>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

      <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msup>
         <mrow><mi>x</mi>
         </mrow>
         <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

         </mrow>
        </msup><mo>,</mo>
        <mover>
         <mrow><mi>y</mi>
         </mrow><mo stretchy="true">&circ;</mo>
        </mover>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msup>
         <mrow><mi>x</mi>
         </mrow>
         <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

         </mrow>
        </msup><mo>,</mo>
        <msup>
         <mrow><mi>y</mi>
         </mrow>
         <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

         </mrow>
        </msup>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo>
     <msub>
      <mrow><mi> &nabla; </mi>
      </mrow>
      <mrow><mi>w</mi>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&lang;</mo>

     <mrow><mi>w</mi><mo>,</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow>
       <msup>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup><mo>,</mo>
       <mover>
        <mrow><mi>y</mi>
        </mrow><mo stretchy="true">&circ;</mo>
       </mover>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow>
       <msup>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup><mo>,</mo>
       <msup>
        <mrow><mi>y</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&rang;</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msup>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msup><mo>,</mo>
      <mover>
       <mrow><mi>y</mi>
       </mrow><mo stretchy="true">&circ;</mo>
      </mover>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>-</mo><mo> &Psi; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msup>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msup><mo>,</mo>
      <msup>
       <mrow><mi>y</mi>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
 </mtable></math></div>
</div>

<div class="note" id='magicparlabel-160'><div class="note_item"><span class="note_label">Note 30.</span>
For the SGD implementation, the computation of error bounds and the derivation of assumptions that guarantee a PAC learning algorithm is straightforward. </div>
</div>
</div>
</body>
</html>
